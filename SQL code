CREATE TABLE applestore_description_combined AS
SELECT * FROM appleStore_description1
Union ALL
SELECT * FROM appleStore_description2
Union ALL
SELECT * FROM appleStore_description3
Union ALL
SELECT * FROM appleStore_description4

-- check number of unique apps in both tables--
SELECT count(distinct id) AS UniqueAppIds
FROM applestore_description_combined
Select count(distinct id) AS UniqueAppIds
FROM AppleStore

-- Check for missing values--
SELECT count (*) AS MissingValues
From applestore_description_combined
WHERE app_desc is null
SELECT count (*) as MissingValues
FROM AppleStore
WHERE track_name is Null or user_rating is null or prime_genre is Null

-- find out the number of apps per genre--
SELECT prime_genre, count (*) as NumApps
FROM AppleStore
GROUP BY prime_genre
ORDER BY NumApps DESC

-- get an overview of the apps' rating--
SELECT min(user_rating) AS MinRating,
max(user_rating) AS MaxRating,
avg(user_rating) AS AvgRating
FROM AppleStore

--Data Analysis--
-- Determine whether paid apps have higher ratings than free apps --
SELECT CASE
WHEN price > 0 THEN 'Paid'
Else 'Free'
END AS app_type,
avg(user_rating) as Avg_rating
FROM AppleStore
GROUP BY App_Type

-- Determine if apps with more supported languages have higher ratings--
SELECT CASE
When lang_num < 10 THEN '<10 languages'
When lang_num BETWEEN 10 and 30 THEN '10-30 languages'
ELSE '>10 languages'
END as language_bucket,
avg(user_rating) as Avg_Rating
FROM AppleStore
GROUP BY language_bucket
ORDER BY Avg_Rating DESC

-- Check genres with low ratings--
SELECT prime_genre, avg(user_rating) AS Avg_Rating
FROM AppleStore
GROUP by prime_genre
ORDER BY Avg_rating ASC
LIMIT 10

-- check if there is a correlation between the length of the app description and the user rating--
SELECT CASE
WHEN length(b.app_desc) <500 then 'Short'
WHEN length(b.app_desc) BETWEEN 500 and 1000 THEN 'Medium'
ELSE 'Long'
END AS description_length_bucket,
Avg(a.user_rating) as average_rating
FROM
AppleStore AS A
JOIN
applestore_description_combined AS B
On
a.id = b.id
GROUP BY description_length_bucket
ORDER BY average_rating DESC
